name: Test Release Build

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
  release-rust:
    name: Test Rust Binary Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Build release binary
        run: cargo build --release --bin isum --target ${{ matrix.target }}
      
      - name: Package binary (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf isum-${{ matrix.target }}.tar.gz isum
          mv isum-${{ matrix.target }}.tar.gz ../../../
      
      - name: Package binary (Windows)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          cd target/${{ matrix.target }}/release
          Compress-Archive -Path isum.exe -DestinationPath isum-${{ matrix.target }}.zip
          Move-Item isum-${{ matrix.target }}.zip ../../../
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: isum-${{ matrix.target }}
          path: isum-${{ matrix.target }}.${{ matrix.archive }}

  release-python:
    name: Test Python Wheels Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: |
            x86_64-apple-darwin
            aarch64-apple-darwin
            x86_64-unknown-linux-gnu
            aarch64-unknown-linux-gnu
            x86_64-pc-windows-msvc
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_BUILD: cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*-musllinux_* *-win32 *-manylinux_i686"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_BEFORE_BUILD: pip install maturin
          CIBW_BUILD_FRONTEND: build
          # Fix macOS deployment target issue
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.12
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl